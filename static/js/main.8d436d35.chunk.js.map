{"version":3,"sources":["utils/constants.js","components/NavWrapper/Nav.js","utils/storage.js","utils/api.js","hooks/useStory.js","components/Error/ErrorMessage.js","components/ItemsList.js","utils/utils.js","components/Story/StoryComment.js","components/Story/StoryCommentsSection.js","components/Story/Story.js","hooks/useStories.js","components/AppContext/initState.js","components/AppContext/AppContext.js","hooks/usePaginator.js","hooks/useSlisedItems.js","components/ShortStory/ShortStory.js","components/Pagination/Pagination.js","components/StoriesSelector/StoriesSelector.js","components/Error/ErrorPage.js","components/MainFeed.js","components/UserPage/UserPublishedStory.js","components/UserPage/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["BASEPATH","Nav","children","getCurrentClassName","isCurrent","className","href","getProps","to","getPersistentData","key","JSON","parse","localStorage","getItem","e","storePersistantData","value","setItem","stringify","BASE_URI","userUrl","userId","topStoriesUrl","bestStoriesUrl","newStoriesUrl","askStoriesUrl","jobStoriesUrl","showStoriesUrl","fetchStory","storyId","fetch","itemId","then","response","ok","Error","clone","text","dataStr","sessionStorage","json","catch","err","console","log","fetchStories","url","type","options","useStory","useState","getData","item","error","setError","requestCall","setRequestCall","useEffect","inProgress","story","setTimeout","call","React","memo","ItemsList","ViewComponent","itemIds","length","map","id","getDateString","date","fullDate","Date","toDateString","split","month","day","year","timeString","toLocaleTimeString","slice","join","getMarkup","data","__html","ItemsListWithComment","comment","by","time","dangerouslySetInnerHTML","onClick","preventDefault","StoryCommentsSections","commentsList","itemsToShow","setItemsToShow","loadRest","setLoadRest","style","textAlign","Story","window","history","back","title","target","rel","kids","useStories","storiesType","items","setItems","controller","AbortController","signal","fetchedData","abort","initState","perPage","prevUrl","prevPage","AppContext","createContext","appReducer","state","action","payload","useAppContext","context","useContext","undefined","AppContextProvider","useReducer","dispatch","Provider","ceil","Math","getPages","startPage","lastPage","callback","pages","minPage","maxPage","i","push","usePaginator","totalElements","itemsOnPage","setPerPage","page","setPage","numOfPages","setNumOfPages","setPages","document","body","scrollIntoView","behavior","useSlisedItems","currentPage","setItemsOnPage","aria-hidden","runPage","handler","defaultValue","onChange","ItemsListWithShortStories","ShortStory","allowedUrls","MainFeed","path","indexOf","includes","best","top","ask","job","show","UserPublishedStory","ItemsListWithUserPublishedStory","user","setUser","fetchUser","about","submitted","scrollHandler","button","scrollY","innerHeight","classList","add","remove","scrollTop","event","App","scrollToTopLink","useRef","current","addEventListener","removeEventListener","basepath","default","ref","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d436d35.chunk.js","sourcesContent":["export const BASEPATH = \"/hacker-news-reader\";","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"./nav.css\";\nimport { BASEPATH } from \"../../utils/constants\";\n\nexport default function Nav({ children }) {\n  const getCurrentClassName = ({ isCurrent, href }) => ({\n    className:\n      href === \"/hacker-news-reader\" && isCurrent\n        ? \"current\"\n        : isCurrent\n        ? \"current\"\n        : \"\",\n  });\n  return (\n    <div className=\"wrapper container\">\n      <nav className=\"nav-wrapper\">\n        <ul className=\"top-menu\">\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/`}>\n              New Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/best`}>\n              Best Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/top`}>\n              Top Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/ask`}>\n              Ask Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/job`}>\n              Job Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to={`${BASEPATH}/show`}>\n              Show Stories\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      {children}\n    </div>\n  );\n}\n","export const getPersistentData = key => {\n  try {\n    const data = JSON.parse(localStorage.getItem(key));\n    return data;\n  } catch (e) {\n    return null;\n  }\n};\nexport const storePersistantData = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\nexport const getData = key => {\n  try {\n    const data = JSON.parse(sessionStorage.getItem(key));\n    return data;\n  } catch (e) {\n    return null;\n  }\n};\nexport const storeData = (key, value) => {\n  sessionStorage.setItem(key, value);\n};\n","import { storeData } from \"./storage\";\n\nconst BASE_URI = \"https://hacker-news.firebaseio.com/v0\";\nconst itemUrl = itemId => `${BASE_URI}/item/${itemId}.json`;\nconst userUrl = userId => `${BASE_URI}/user/${userId}.json`;\nconst topStoriesUrl = () => `${BASE_URI}/topstories.json`;\nconst bestStoriesUrl = () => `${BASE_URI}/beststories.json`;\nconst newStoriesUrl = () => `${BASE_URI}/newstories.json`;\nconst askStoriesUrl = () => `${BASE_URI}/askstories.json`;\nconst jobStoriesUrl = () => `${BASE_URI}/jobstories.json`;\nconst showStoriesUrl = () => `${BASE_URI}/showstories.json`;\n\nexport const fetchStory = storyId => {\n  return fetch(itemUrl(storyId))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      response\n        .clone()\n        .text()\n        .then(dataStr => storeData(storyId, dataStr));\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n\nexport const fetchUser = (userId, options = {}) => {\n  return fetch(userUrl(userId), {...options})\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n\nexport const fetchStories = (type = \"new\", options = {}) => {\n  let url;\n  switch (type) {\n    case \"top\":\n      url = topStoriesUrl();\n      break;\n    case \"best\":\n      url = bestStoriesUrl();\n      break;\n    case \"ask\":\n      url = askStoriesUrl();\n      break;\n    case \"job\":\n      url = jobStoriesUrl();\n      break;\n    case \"show\":\n      url = showStoriesUrl();\n      break;\n    default:\n      url = newStoriesUrl();\n  }\n  return fetch(url, {...options})\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n","import { useState, useEffect } from \"react\";\nimport { fetchStory } from \"../utils/api\";\nimport { getData } from \"../utils/storage\";\n\nconst useStory = itemId => {\n  const [item, setItem] = useState(getData(itemId));\n  const [error, setError] = useState(false);\n  const [requestCall, setRequestCall] = useState(0);\n\n  useEffect(() => {\n    if (item) {\n      return;\n    }\n    if (requestCall < 3) {\n      let inProgress = true;\n      fetchStory(itemId)\n        .then(story => {\n          if (inProgress) {\n            if (story) {\n              setError(false);\n              setItem(story);\n            } else {\n              setError(true);\n              setTimeout(\n                () => inProgress && setRequestCall(call => call + 1),\n                3000,\n              );\n            }\n          }\n        })\n        .catch(e => {\n          inProgress && setError(true);\n          setTimeout(\n            () => inProgress && setRequestCall(call => call + 1),\n            3000,\n          );\n        });\n      return () => {\n        inProgress = false;\n      };\n    }\n  }, [itemId, requestCall]);\n\n  return [item, error];\n};\n\nexport default useStory;\n","import React from \"react\";\n\nconst ErrorMessage = () => (\n  <div className=\"error-message\">Sorry! Try again later :(</div>\n);\n\nexport default React.memo(ErrorMessage);\n","import React from \"react\";\n\nconst ItemsList = ViewComponent => itemIds => {\n  return itemIds && itemIds.length ? (\n    itemIds.map(id => <ViewComponent key={id} id={id} />)\n  ) : (\n    null\n  );\n};\n\nexport default ItemsList;\n","export const getDateString = date => {\n  const fullDate = new Date(+date * 1000);\n  const [, month, day, year] = fullDate.toDateString().split(\" \");\n  const timeString = fullDate\n    .toLocaleTimeString()\n    .split(\":\")\n    .slice(0, 2)\n    .join(\":\");\n\n  return `${month} ${day}, ${year} at ${timeString}`;\n};","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useStory from \"../../hooks/useStory\";\nimport { getDateString } from \"../../utils/utils\";\n\nconst getMarkup = data => ({\n  __html: data,\n});\n\nexport default function StoryComment({ id }) {\n  const [comment, error] = useStory(id);\n  if (error) {\n    return null;\n  }\n  if (!comment) {\n    return (\n      <div className=\"story-comment\">\n        <div className=\"comment-top\">\n          <Link className=\"comment-author loading\" to=\"\" onClick={(e)=>e.preventDefault()}>\n          </Link>\n          <span className=\"comment-time loading\"></span>\n        </div>\n        <hr />\n        <div\n          className=\"comment-content loading\"\n        />\n        <div\n          className=\"comment-content loading\"\n        />\n        <div\n          className=\"comment-content last-line loading\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className=\"story-comment\">\n      <div className=\"comment-top\">\n        <Link className=\"comment-author\" to={`../../user/${comment.by}`}>\n          {comment.by}\n        </Link>\n        <span className=\"comment-time\">{getDateString(comment.time)}</span>\n      </div>\n      <hr />\n      <div\n        className=\"comment-content\"\n        dangerouslySetInnerHTML={getMarkup(comment.text)}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ItemsList from \"../ItemsList\";\nimport StoryComment from \"./StoryComment\";\n\nconst ItemsListWithComment = ItemsList(StoryComment);\n\nexport default function StoryCommentsSections({ commentsList }) {\n  const [itemsToShow, setItemsToShow] = useState([]);\n  const [loadRest, setLoadRest] = useState(false);\n\n  useEffect(() => {\n    if (!commentsList || (commentsList && !commentsList.length)) {\n      return;\n    }\n    if (loadRest) {\n      setItemsToShow(commentsList);\n    } else {\n      setItemsToShow(commentsList.slice(0, 5));\n    }\n  }, [loadRest]);\n\n  return commentsList && commentsList.length ? (\n    <div className=\"full-story-comments\">\n      <h5>Comments:</h5>\n      {ItemsListWithComment(itemsToShow)}\n      {commentsList && commentsList.length > 5 && !loadRest ? (\n        <div className=\"\" style={{textAlign: 'center'}}>\n          <button onClick={() => setLoadRest(true)}>Load more ({commentsList.length - 5})</button>\n        </div>\n      ) : null}\n    </div>\n  ) : null;\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useStory from \"../../hooks/useStory\";\nimport ErrorMessage from \"../Error/ErrorMessage\";\nimport './story.css';\nimport StoryCommentsSections from \"./StoryCommentsSection\";\n\nconst getMarkup = data => ({\n  __html: data,\n});\n\nconst Story = ({ itemId }) => {\n  const [story, err] = useStory(itemId);\n\n  if (err) {\n    return <ErrorMessage />;\n  }\n  if (!story) {\n    return null;\n  }\n  \n  return (\n    <>\n      <div className=\"full-story-top\">\n        <Link\n          to=\"#\"\n          onClick={() => window.history.back()}\n          className=\"back-button\"\n        >\n          <span>&lArr; Back</span>\n        </Link>\n      </div>\n      <div className=\"full-story\">\n        <h1 className=\"title\">{story.title}</h1>\n        <div dangerouslySetInnerHTML={getMarkup(story.text)} />\n        {story.url ? (\n          <div className=\"full-story-bottom\">\n            <a target=\"_blank\" href={story.url} rel=\"noopener noreferrer\">\n              Read original &rArr;\n            </a>\n          </div>\n        ) : null}\n      </div>\n      <StoryCommentsSections commentsList={story.kids} />\n    </>\n  );\n};\n\nexport default Story;\n","import { useState, useEffect } from \"react\";\nimport { fetchStories } from \"../utils/api\";\n\nconst useStories = (storiesType = \"new\") => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(false);\n  const [requestCall, setRequestCall] = useState(0);\n\n  useEffect(() => {\n    if (requestCall < 3) {\n      let inProgress = true;\n      const controller = new AbortController();\n      fetchStories(storiesType, { signal: controller.signal })\n        .then(fetchedData => {\n          if (inProgress) {\n            if (fetchedData) {\n              setError(false);\n              setItems(fetchedData);\n            } else {\n              setError(true);\n              setTimeout(\n                () => inProgress && setRequestCall(call => call + 1),\n                3000\n              );\n            }\n          }\n        })\n        .catch(e => {\n          inProgress && setError(true);\n          setTimeout(\n            () => inProgress && setRequestCall(call => call + 1),\n            3000,\n          );\n        });\n      return () => {\n        inProgress = false;\n        controller.abort();\n      };\n    }\n  }, [storiesType, requestCall]);\n\n  return [items, error];\n};\n\nexport default useStories;\n","import { getPersistentData } from \"../../utils/storage\";\n\nconst initState = {\n  perPage: getPersistentData(\"perPage\") || 5,\n  prevUrl: getPersistentData(\"prevUrl\") || \"\",\n  prevPage: getPersistentData(\"prevPage\") || 0,\n};\n\nexport default initState;\n","import React, { createContext, useReducer, useContext } from \"react\";\nimport initState from \"./initState.js\";\nimport { storePersistantData } from \"../../utils/storage.js\";\n\nconst AppContext = createContext();\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_PER_PAGE\":\n      storePersistantData(\"perPage\", action.payload);\n      return {\n        ...state,\n        perPage: action.payload,\n      };\n    case \"SET_PREV_URL\":\n      storePersistantData(\"prevUrl\", action.payload);\n      return {\n        ...state,\n        prevUrl: action.payload,\n      };\n    case \"SET_PREV_PAGE\":\n      storePersistantData(\"prevPage\", action.payload);\n      return {\n        ...state,\n        prevPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst useAppContext = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error(\"useAppContext should be used within AppContextProvider\");\n  }\n  return context;\n};\n\nconst AppContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initState);\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContextProvider, useAppContext };\n","import { useState, useEffect } from \"react\";\r\nimport { useAppContext } from \"../components/AppContext/AppContext\";\r\nconst ceil = Math.ceil;\r\nconst getPages = (startPage, lastPage, callback) => {\r\n  let pages = [];\r\n  let minPage = startPage - 2;\r\n  let maxPage = minPage < 0 ? minPage * -1 + startPage + 2 : startPage + 2;\r\n  minPage = minPage < 0 ? 0 : minPage;\r\n  if(!lastPage) {\r\n    return pages;\r\n  }\r\n  lastPage -= 1;\r\n  if (maxPage >= lastPage) {\r\n    minPage -= maxPage - lastPage;\r\n    maxPage = lastPage;\r\n  }\r\n  minPage = minPage < 0 ? 0 : minPage;\r\n  for (let i = minPage; i <= maxPage; i++) {\r\n    pages.push([i + 1, () => callback(i)]);\r\n  }\r\n  return pages;\r\n};\r\nconst usePaginator = (totalElements, startPage, itemsOnPage) => {\r\n  const [,dispatch] = useAppContext();\r\n  const [perPage, setPerPage] = useState(itemsOnPage);\r\n  const [page, setPage] = useState(startPage);\r\n  const [numOfPages, setNumOfPages] = useState(ceil(totalElements / perPage));\r\n  const [pages, setPages] = useState(getPages(page, numOfPages, setPage));\r\n\r\n  useEffect(() => {\r\n    if(!totalElements) {\r\n      return;\r\n    }\r\n    dispatch({type: 'SET_PER_PAGE', payload: perPage});\r\n    setNumOfPages(ceil(totalElements / perPage));\r\n  }, [totalElements, perPage]);\r\n  \r\n  useEffect(() => {\r\n    if(!totalElements || !numOfPages) {\r\n      return;\r\n    }\r\n    dispatch({type:'SET_PREV_PAGE', payload: page});\r\n\r\n    setPages(getPages(page, numOfPages, setPage));\r\n    document.body.scrollIntoView({behavior: 'smooth'});\r\n  }, [numOfPages, page]);\r\n\r\n  return [page, perPage, pages, setPerPage, setPage];\r\n};\r\n\r\nexport default usePaginator;\r\n","import { useState, useEffect } from \"react\";\n\nconst useSlisedItems = (items, currentPage, perPage) => {\n  const [itemsOnPage, setItemsOnPage] = useState(\n    items.slice(currentPage * perPage, (currentPage + 1) * perPage),\n  );\n\n  useEffect(() => {\n    setItemsOnPage(\n      items.slice(currentPage * perPage, (currentPage + 1) * perPage),\n    );\n  }, [items, perPage, currentPage]);\n\n  return itemsOnPage;\n};\n\nexport default useSlisedItems;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useStory from \"../../hooks/useStory\";\nimport ErrorMessage from \"../Error/ErrorMessage\";\nimport { getDateString } from \"../../utils/utils\";\nimport './short-story.css';\n\nfunction ShortStory({ id }) {\n  const [data, fetchingError] = useStory(id);\n\n  if (fetchingError) {\n    return <ErrorMessage />;\n  }\n  if (!data) {\n    return (\n      <div className=\"short-story preloading\">\n        <h4 className=\"story-title loading\" aria-hidden=\"true\" ></h4>\n        <div className=\"story-short-bottom\">\n          <span className=\"story-author loading\"></span>\n          <span className=\"story-date loading\"></span>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"short-story row\">\n      <h4 className=\"story-title\">\n        <Link to={`./story/${data.id}`}>{data.title}</Link>\n      </h4>\n      <div className=\"story-short-bottom\">\n        <span className=\"story-author\">\n          by <Link to={`./user/${data.by}`}>{data.by}</Link>\n        </span>\n        <span className=\"story-date\">{getDateString(data.time)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ShortStory);\n","import React from \"react\";\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ pages, currentPage }) =>\r\n  pages && pages.length ? (\r\n    <div className=\"pages row\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(([i, runPage]) => (\r\n          <li key={i}>\r\n            <button\r\n              className={`btn-link ${i === currentPage + 1 ? \"current\" : \"\"}`}\r\n              onClick={i === currentPage + 1 ? () => {} : () => runPage()}\r\n            >\r\n              {i}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n\r\nexport default React.memo(Pagination);\r\n","import React from \"react\";\r\nimport './selector.css';\r\n\r\nconst StoriesSelector = ({ perPage, handler }) => (\r\n  <div className=\"per-page-wrapper row\">\r\n    <select defaultValue={perPage} onChange={e => handler(+e.target.value)}>\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"15\">15</option>\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default React.memo(StoriesSelector);\r\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst ErrorPage = () => {\n  return (\n    <div className=\"error-page\">\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <p>Sorry! Wrong url...</p>\n      <div>\n        <Link to=\"./\">Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ErrorPage);\n","import React, { useEffect } from \"react\";\nimport useStories from \"../hooks/useStories\";\nimport usePaginator from \"../hooks/usePaginator\";\nimport useSlisedItems from \"../hooks/useSlisedItems\";\nimport ItemsList from \"./ItemsList\";\nimport ShortStory from \"./ShortStory/ShortStory\";\nimport Pagination from \"./Pagination/Pagination\";\nimport StoriesSelector from \"./StoriesSelector/StoriesSelector\";\nimport ErrorPage from \"./Error/ErrorPage\";\nimport ErrorMessage from \"./Error/ErrorMessage\";\nimport { useAppContext } from \"./AppContext/AppContext\";\n\nconst ItemsListWithShortStories = ItemsList(ShortStory);\n\nconst getTitle = route => {\n  const titles = {\n    \"\": \"New Stories Feed\",\n    best: \"Best Stories Feed\",\n    top: \"Top Stories Feed\",\n    ask: \"Ask Stories Feed\",\n    job: \"Job Stories Feed\",\n    show: \"Show Stories Feed\",\n  };\n  return titles[route];\n};\n\nconst allowedUrls = [\"\", \"best\", \"top\", \"ask\", \"job\", \"show\"];\n\nconst MainFeed = ({ \"*\": path }) => {\n  const [state, dispatch] = useAppContext();\n  const [items, error] = useStories(path);\n  const [page, perPage, pages, setPerPage, setPage] = usePaginator(\n    items.length,\n    state.prevPage,\n    state.perPage\n   );\n  const itemsOnPage = useSlisedItems(items, page, perPage);\n\n  useEffect(() => {\n    if(state.prevUrl !== path) {\n      setPage(0);\n    }\n    dispatch({'type':'SET_PREV_URL', 'payload': path});\n  }, [path]);\n\n  useEffect(() => {\n    if(!pages.length) {\n      return;\n    }\n    const pageIndex = pages.map(([i]) => i - 1).indexOf(page);\n    if (pageIndex === -1) {\n      if (page > 0) {\n        pages[pages.length - 1][1]();\n      } else {\n        pages[0] && pages[0][1] && pages[0][1]();\n      }\n    }\n  }, [pages]);\n\n  if (!allowedUrls.includes(path)) {\n    return <ErrorPage />;\n  }\n\n  if (error) {\n    return <ErrorMessage />;\n  }\n\n  return (\n    <div className=\"news-feed-wrapper\">\n      <h1>{getTitle(path)}</h1>\n      <StoriesSelector perPage={perPage} handler={i => setPerPage(i)} />\n      {ItemsListWithShortStories(itemsOnPage)}\n      {items.length && pages.length > 1 ? (\n        <Pagination pages={pages} currentPage={page} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default MainFeed;\n","import React from 'react';\nimport { Link } from \"@reach/router\";\nimport useStory from \"../../hooks/useStory\";\n\nconst UserPublishedStory = ({ id }) => {\n  const [data, fetchingError] = useStory(id);\n\n  if (fetchingError) {\n    return null;\n  }\n\n  if (!data) {\n    return <div className=\"user-story-title loading\"></div>;\n  }\n\n  if(data && data.type === 'comment') {\n    return null;\n  }\n\n  return (\n    <div className=\"user-story-title\">\n      <Link to={`../../story/${id}`}>{data.title}</Link>\n    </div>\n  );\n};\n\nexport default UserPublishedStory;","import React, { useEffect, useState } from \"react\";\nimport { fetchUser } from \"../../utils/api\";\nimport ItemsList from \"../ItemsList\";\nimport ErrorMessage from \"../Error/ErrorMessage\";\nimport UserPublishedStory from './UserPublishedStory';\nimport './user.css';\n\nconst getMarkup = data => ({\n  __html: data,\n});\n\nconst ItemsListWithUserPublishedStory = ItemsList(UserPublishedStory);\n\nconst UserPage = ({ userId }) => {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    let inProgress = true;\n    let controller = new AbortController();\n    fetchUser(userId, { signal: controller.signal })\n      .then(data => {\n        if (inProgress) {\n          if (data) {\n            setUser(data);\n            setError(false);\n          } else {\n            setError(true);\n          }\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        inProgress && setError(true);\n      });\n    return () => {\n      inProgress = false;\n      controller.abort();\n    };\n  }, [userId]);\n\n  if (error) {\n    return <ErrorMessage />;\n  }\n\n  if (!user) {\n    return (\n      <div className=\"user-wrapper row\">\n        <div className=\"two columns\">\n          <button\n            className=\"btn-link back-button\"\n            onClick={() => window.history.back()}\n          >\n            &lArr; Back\n          </button>\n        </div>\n        <div className=\"ten columns\">\n          <h3 className=\"user-name-field loading\" aria-hidden=\"true\"></h3>\n          <div className=\"user-info loading\" />\n          <div className=\"user-info loading\" />\n          <div className=\"user-info last-line loading\" />\n          <hr />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"user-wrapper row\">\n      <div className=\"two columns\">\n        <button\n          className=\"btn-link back-button\"\n          onClick={() => window.history.back()}\n        >\n          &lArr; Back\n        </button>\n      </div>\n      <div className=\"ten columns\">\n        <h3 className=\"user-name-field\">{user.id}</h3>\n        <div\n          className=\"user-info\"\n          dangerouslySetInnerHTML={getMarkup(user.about)}\n        />\n        <hr />\n        {ItemsListWithUserPublishedStory(user.submitted.slice(0, 10))}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(UserPage);\n","import React, { useEffect, useRef } from \"react\";\nimport { Router } from \"@reach/router\";\nimport Nav from \"./components/NavWrapper/Nav\";\nimport Story from \"./components/Story/Story\";\nimport MainFeed from \"./components/MainFeed\";\nimport UserPage from \"./components/UserPage/UserPage\";\nimport { BASEPATH } from \"./utils/constants\";\nimport { AppContextProvider } from \"./components/AppContext/AppContext\";\n\nconst scrollHandler = (button) => () => {\n  if(window.scrollY > window.innerHeight*2){\n    button.classList.add('show');\n  } else {\n    button.classList.remove('show');\n  }\n}\n\nconst scrollTop = (event) => {\n  event.preventDefault();\n  document.body.scrollIntoView({behavior: 'smooth'});\n}\n\nfunction App() {\n  const scrollToTopLink = useRef();\n  useEffect(()=>{\n    if(scrollToTopLink.current === null) {\n      return;\n    }\n    let handler = scrollHandler(scrollToTopLink.current);\n    window.addEventListener('scroll', handler);\n\n    return ()=>window.removeEventListener('scroll', handler);\n\n  }, [scrollToTopLink]);\n\n  return (\n    <>\n      <AppContextProvider>\n        <Router basepath={`${BASEPATH}`} >\n          <Nav path=\"/\" default>\n            <MainFeed path=\"/*\" />\n            <Story path=\"story/:itemId\" />\n            <UserPage path=\"user/:userId\" />\n          </Nav>\n        </Router>\n        <a ref={scrollToTopLink} href=\"\" className=\"scroll-top\" onClick={(e)=>scrollTop(e)} >Top</a>\n      </AppContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./static/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}