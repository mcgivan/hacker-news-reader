{"version":3,"sources":["components/Nav.js","utils/api.js","utils/storage.js","hooks/useStory.js","components/Story.js","hooks/useStories.js","hooks/usePaginator.js","hooks/useSlisedItems.js","components/ItemsList.js","components/ShortStory.js","components/Pagination.js","components/StoriesQuantityChanger.js","components/ErrorPage.js","components/MainFeed.js","components/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["Nav","children","getCurrentClassName","className","isCurrent","getProps","to","BASE_URI","topStoriesUrl","bestStoriesUrl","newStoriesUrl","askStoriesUrl","jobStoriesUrl","showStoriesUrl","fetchStory","storyId","fetch","itemId","then","response","ok","Error","clone","text","dataStr","key","value","localStorage","setItem","json","catch","err","console","log","fetchUser","userId","userUrl","fetchStories","url","type","useStory","useState","JSON","parse","getItem","e","getData","item","error","setError","requestCall","setRequestCall","useEffect","inProgress","story","setTimeout","call","Story","data","onClick","window","history","back","title","dangerouslySetInnerHTML","__html","target","href","rel","useStories","storiesType","items","setItems","controller","AbortController","signal","fetchedData","abort","floor","Math","getPages","startPage","lastPage","callback","pages","minPage","maxPage","i","push","usePaginator","totalElements","itemsOnPage","perPage","setPerPage","page","setPage","numOfPages","setNumOfPages","setPages","useSlisedItems","currentPage","slice","setItemsOnPage","ItemsList","ViewComponent","itemIds","length","map","id","getDateString","date","fullDate","Date","toDateString","split","month","day","year","timeString","toLocaleTimeString","join","React","memo","by","time","runPage","handler","defaultValue","onChange","style","textAlign","ItemsListWithShortStories","ShortStory","allowedUrls","MainFeed","path","includes","best","top","ask","job","show","navigate","ItemsListWithTitleView","user","setUser","about","submitted","App","basepath","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ee3eca81.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nexport default function Nav({ children }) {\n  const getCurrentClassName = ({ isCurrent }) => ({\n    className: isCurrent ? \"current\" : \"\",\n  });\n  return (\n    <div className=\"wrapper container\">\n      <nav className=\"nav-wrapper\">\n        <ul className=\"top-menu\">\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./\">\n              New Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./best\">\n              Best Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./top\">\n              Top Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./ask\">\n              Ask Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./job\">\n              Job Stories\n            </Link>\n          </li>\n          <li className=\"top-menu-link\">\n            <Link getProps={getCurrentClassName} to=\"./show\">\n              Show Stories\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      {children}\n    </div>\n  );\n}\n","import { storeData } from \"./storage\";\n\nconst BASE_URI = \"https://hacker-news.firebaseio.com/v0\";\nconst itemUrl = itemId => `${BASE_URI}/item/${itemId}.json`;\nconst userUrl = userId => `${BASE_URI}/user/${userId}.json`;\nconst topStoriesUrl = () => `${BASE_URI}/topstories.json`;\nconst bestStoriesUrl = () => `${BASE_URI}/beststories.json`;\nconst newStoriesUrl = () => `${BASE_URI}/newstories.json`;\nconst askStoriesUrl = () => `${BASE_URI}/askstories.json`;\nconst jobStoriesUrl = () => `${BASE_URI}/jobstories.json`;\nconst showStoriesUrl = () => `${BASE_URI}/showstories.json`;\n\nexport const fetchStory = storyId => {\n  return fetch(itemUrl(storyId))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      response\n        .clone()\n        .text()\n        .then(dataStr => storeData(storyId, dataStr));\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n\nexport const fetchUser = userId => {\n  return fetch(userUrl(userId))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n\nexport const fetchStories = (type = \"new\") => {\n  let url;\n  switch (type) {\n    case \"top\":\n      url = topStoriesUrl();\n      break;\n    case \"best\":\n      url = bestStoriesUrl();\n      break;\n    case \"ask\":\n      url = askStoriesUrl();\n      break;\n    case \"job\":\n      url = jobStoriesUrl();\n      break;\n    case \"show\":\n      url = showStoriesUrl();\n      break;\n    default:\n      url = newStoriesUrl();\n  }\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! Fetching error...\");\n      }\n      return response.json();\n    })\n    .catch(err => {\n      console.log(err);\n      return null;\n    });\n};\n","export const getData = key => {\n  try {\n    const data = JSON.parse(localStorage.getItem(key));\n    return data;\n  } catch (e) {\n    return null;\n  }\n};\nexport const storeData = (key, value) => {\n  localStorage.setItem(key, value);\n};\n","import { useState, useEffect } from \"react\";\nimport { fetchStory } from \"../utils/api\";\nimport { getData } from \"../utils/storage\";\n\nconst useStory = itemId => {\n  const [item, setItem] = useState(getData(itemId));\n  const [error, setError] = useState(false);\n  const [requestCall, setRequestCall] = useState(0);\n\n  useEffect(() => {\n    if (item) {\n      return;\n    }\n    if (requestCall < 3) {\n      let inProgress = true;\n      fetchStory(itemId)\n        .then(story => {\n          if (inProgress) {\n            if (story) {\n              setError(false);\n              setItem(story);\n            } else {\n              setError(true);\n              setTimeout(\n                () => inProgress && setRequestCall(call => call + 1),\n                3000,\n              );\n            }\n          }\n        })\n        .catch(e => {\n          inProgress && setError(true);\n          setTimeout(\n            () => inProgress && setRequestCall(call => call + 1),\n            3000,\n          );\n        });\n      return () => {\n        inProgress = false;\n      };\n    }\n  }, [itemId, requestCall]);\n\n  return [item, error];\n};\n\nexport default useStory;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useStory from \"../hooks/useStory\";\n\nconst getMarkup = data => ({\n  __html: data,\n});\n\nconst Story = ({ itemId }) => {\n  const [story, err] = useStory(itemId);\n\n  if (err) {\n    return <div>Sorry! Error occured</div>;\n  }\n  if (!story) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"full-story-top\">\n        <Link\n          to=\"#\"\n          onClick={() => window.history.back()}\n          className=\"back-button\"\n        >\n          <span>&lArr; Back</span>\n        </Link>\n      </div>\n      <div className=\"full-story\">\n        <h1 className=\"title\">{story.title}</h1>\n        <div dangerouslySetInnerHTML={getMarkup(story.text)} />\n        {story.url ? (\n          <div className=\"full-story-bottom\">\n            <a target=\"_blank\" href={story.url} rel=\"noopener noreferrer\">\n              Read original &rArr;\n            </a>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default Story;\n","import { useState, useEffect } from \"react\";\nimport { fetchStories } from \"../utils/api\";\n\nconst useStories = (storiesType = \"new\") => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(false);\n  const [requestCall, setRequestCall] = useState(0);\n\n  useEffect(() => {\n    if (requestCall < 3) {\n      let inProgress = true;\n      const controller = new AbortController();\n      fetchStories(storiesType, controller.signal)\n        .then(fetchedData => {\n          if (inProgress) {\n            if (fetchedData) {\n              setError(false);\n              setItems(fetchedData);\n            } else {\n              setError(true);\n              setTimeout(\n                () => (inProgress && setRequestCall(call => call + 1), 3000),\n              );\n            }\n          }\n        })\n        .catch(e => {\n          inProgress && setError(true);\n          setTimeout(\n            () => inProgress && setRequestCall(call => call + 1),\n            3000,\n          );\n        });\n      return () => {\n        inProgress = false;\n        controller.abort();\n      };\n    }\n  }, [storiesType, requestCall]);\n\n  return [items, error];\n};\n\nexport default useStories;\n","import { useState, useEffect } from \"react\";\r\nconst floor = Math.floor;\r\nconst getPages = (startPage, lastPage, callback) => {\r\n  let pages = [];\r\n  let minPage = startPage - 2;\r\n  let maxPage = minPage < 0 ? minPage * -1 + startPage + 2 : startPage + 2;\r\n  minPage = minPage < 0 ? 0 : minPage;\r\n  if (maxPage >= lastPage) {\r\n    minPage -= maxPage - lastPage;\r\n    maxPage = lastPage;\r\n  }\r\n  for (let i = minPage; i <= maxPage; i++) {\r\n    pages.push([i + 1, () => callback(i)]);\r\n  }\r\n  return pages;\r\n};\r\nconst usePaginator = (totalElements, startPage = 0, itemsOnPage = 5) => {\r\n  const [perPage, setPerPage] = useState(itemsOnPage);\r\n  const [page, setPage] = useState(startPage);\r\n  const [numOfPages, setNumOfPages] = useState(floor(totalElements / perPage));\r\n  const [pages, setPages] = useState(getPages(page, numOfPages, setPage));\r\n\r\n  useEffect(() => {\r\n    setNumOfPages(floor(totalElements / perPage));\r\n  }, [totalElements, perPage]);\r\n\r\n  useEffect(() => {\r\n    setPages(getPages(page, numOfPages, setPage));\r\n  }, [numOfPages, page]);\r\n\r\n  return [page, perPage, pages, setPerPage];\r\n};\r\n\r\nexport default usePaginator;\r\n","import { useState, useEffect } from \"react\";\n\nconst useSlisedItems = (items, currentPage, perPage) => {\n  const [itemsOnPage, setItemsOnPage] = useState(\n    items.slice(currentPage * perPage, (currentPage + 1) * perPage),\n  );\n\n  useEffect(() => {\n    setItemsOnPage(\n      items.slice(currentPage * perPage, (currentPage + 1) * perPage),\n    );\n  }, [items, perPage, currentPage]);\n\n  return itemsOnPage;\n};\n\nexport default useSlisedItems;\n","import React from \"react\";\n\nconst ItemsList = ViewComponent => itemIds => {\n  return itemIds && itemIds.length ? (\n    itemIds.map(id => <ViewComponent key={id} id={id} />)\n  ) : (\n    null\n  );\n};\n\nexport default ItemsList;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport useStory from \"../hooks/useStory\";\n\nconst getDateString = date => {\n  const fullDate = new Date(+date * 1000);\n  const [, month, day, year] = fullDate.toDateString().split(\" \");\n  const timeString = fullDate\n    .toLocaleTimeString()\n    .split(\":\")\n    .slice(0, 2)\n    .join(\":\");\n\n  return `${month} ${day}, ${year} at ${timeString}`;\n};\n\nfunction ShortItem({ id }) {\n  const [data, fetchingError] = useStory(id);\n\n  if (fetchingError) {\n    return <div>Error occured</div>;\n  }\n  if (!data) {\n    return (\n      <div className=\"short-story preloading\">\n        <h4 className=\"story-title loading\"></h4>\n        <div className=\"story-short-bottom\">\n          <span className=\"story-author loading\"></span>\n          <span className=\"story-date loading\"></span>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"short-story row\">\n      <h4 className=\"story-title\">\n        <Link to={`./story/${data.id}`}>{data.title}</Link>\n      </h4>\n      <div className=\"story-short-bottom\">\n        <span className=\"story-author\">\n          by <Link to={`./user/${data.by}`}>{data.by}</Link>\n        </span>\n        <span className=\"story-date\">{getDateString(data.time)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ShortItem);\n","import React from \"react\";\r\n\r\nconst Pagination = ({ pages, currentPage }) =>\r\n  pages && pages.length ? (\r\n    <div className=\"pages row\">\r\n      <ul className=\"paginator\">\r\n        {pages.map(([i, runPage]) => (\r\n          <li key={i}>\r\n            <a\r\n              className={i === currentPage + 1 ? \"current\" : \"\"}\r\n              onClick={i === currentPage + 1 ? () => {} : () => runPage()}\r\n            >\r\n              {i}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : null;\r\n\r\nexport default React.memo(Pagination);\r\n","import React from \"react\";\r\n\r\nconst StoriesQuantityChanger = ({ perPage, handler }) => (\r\n  <div className=\"per-page-wrapper row\">\r\n    <select defaultValue={perPage} onChange={e => handler(+e.target.value)}>\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"15\">15</option>\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default React.memo(StoriesQuantityChanger);\r\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst ErrorPage = () => {\n  return (\n    <div className=\"error-page\">\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <p>Sorry! Wrong url...</p>\n      <div>\n        <Link to=\"./\">Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ErrorPage);\n","import React from \"react\";\nimport useStories from \"../hooks/useStories\";\nimport usePaginator from \"../hooks/usePaginator\";\nimport useSlisedItems from \"../hooks/useSlisedItems\";\nimport ItemsList from \"./ItemsList\";\nimport ShortStory from \"./ShortStory\";\nimport Pagination from \"./Pagination\";\nimport StoriesQuantityChanger from \"./StoriesQuantityChanger\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst ItemsListWithShortStories = ItemsList(ShortStory);\n\nconst getTitle = route => {\n  const titles = {\n    \"\": \"New Stories Feed\",\n    best: \"Best Stories Feed\",\n    top: \"Top Stories Feed\",\n    ask: \"Ask Stories Feed\",\n    job: \"Job Stories Feed\",\n    show: \"Show Stories Feed\",\n  };\n  return titles[route];\n};\n\nconst allowedUrls = [\"\", \"best\", \"top\", \"ask\", \"job\", \"show\"];\n\nconst MainFeed = ({ \"*\": path }) => {\n  const [items, error] = useStories(path);\n  const [page, perPage, pages, setPerPage] = usePaginator(items.length);\n  const itemsOnPage = useSlisedItems(items, page, perPage);\n\n  if (!allowedUrls.includes(path)) {\n    return <ErrorPage />;\n  }\n\n  if (error) {\n    return <div>Sorry! Try again later :(</div>;\n  }\n\n  return (\n    <div className=\"news-feed-wrapper\">\n      <h1>{getTitle(path)}</h1>\n      <StoriesQuantityChanger perPage={perPage} handler={setPerPage} />\n      {ItemsListWithShortStories(itemsOnPage)}\n      {items.length ? <Pagination pages={pages} currentPage={page} /> : null}\n    </div>\n  );\n};\n\nexport default MainFeed;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, navigate } from \"@reach/router\";\nimport { fetchUser } from \"../utils/api\";\nimport useStory from \"../hooks/useStory\";\nimport ItemsList from \"./ItemsList\";\n\nconst getMarkup = data => ({\n  __html: data,\n});\n\nwindow.handler = navigate;\n\nconst TitleView = ({ id }) => {\n  const [data, fetchingError] = useStory(id);\n\n  if (fetchingError) {\n    return null;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Link to={`../../story/${id}`}>\n        {data.title}\n      </Link>\n    </div>\n  );\n};\n\nconst ItemsListWithTitleView = ItemsList(TitleView);\n\nconst UserPage = ({ userId }) => {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      return;\n    }\n\n    fetchUser(userId)\n      .then(data => {\n        if (data) {\n          setUser(data);\n          setError(false);\n        } else {\n          setError(true);\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        setError(true);\n      });\n  }, [userId]);\n\n  if (!user) {\n    return <div>Fetching user info...</div>;\n  }\n\n  return (\n    <div className=\"user-wrapper row\">\n      <div className=\"two columns\">\n        <a href=\"#\" onClick={() => window.history.back()}>\n          &lArr; Back\n        </a>\n      </div>\n      <div className=\"ten columns\">\n        <h3>{user.id}</h3>\n        <pre dangerouslySetInnerHTML={getMarkup(user.about)} />\n        <hr />\n        {ItemsListWithTitleView(user.submitted.slice(0, 10))}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(UserPage);\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport Nav from \"./components/Nav\";\nimport Story from \"./components/Story\";\nimport MainFeed from \"./components/MainFeed\";\nimport UserPage from \"./components/UserPage\";\n\nfunction App() {\n  return (\n    <Router basepath=\"/hacker-news-reader\" >\n      <Nav path=\"/\">\n        <MainFeed path=\"/*\" />\n        <Story path=\"story/:itemId\" />\n        <UserPage path=\"user/:userId\" />\n      </Nav>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./static/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}